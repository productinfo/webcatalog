diff --git a/node_modules/@felixrieseberg/spellchecker/src/main.cc b/node_modules/@felixrieseberg/spellchecker/src/main.cc
index 040fb67..80b86ce 100644
--- a/node_modules/@felixrieseberg/spellchecker/src/main.cc
+++ b/node_modules/@felixrieseberg/spellchecker/src/main.cc
@@ -6,6 +6,8 @@ using Nan::ObjectWrap;
 using namespace spellchecker;
 using namespace v8;
 
+// Patched with goddessfreya's code: https://github.com/atom/node-spellchecker/pull/128
+
 namespace {
 
 class Spellchecker : public Nan::ObjectWrap {
@@ -101,9 +103,15 @@ class Spellchecker : public Nan::ObjectWrap {
       uint32_t start = iter->start, end = iter->end;
 
       Local<Object> misspelled_range = Nan::New<Object>();
-      misspelled_range->Set(Nan::New("start").ToLocalChecked(), Nan::New<Integer>(start));
-      misspelled_range->Set(Nan::New("end").ToLocalChecked(), Nan::New<Integer>(end));
-      result->Set(index, misspelled_range);
+      {
+        Isolate* isolate = misspelled_range->GetIsolate();
+        Local<Context> context = isolate->GetCurrentContext();
+        misspelled_range->Set(context, Nan::New("start").ToLocalChecked(), Nan::New<Integer>(start)).Check();
+        misspelled_range->Set(context, Nan::New("end").ToLocalChecked(), Nan::New<Integer>(end)).Check();
+      }
+      Isolate* isolate = result->GetIsolate();
+      Local<Context> context = isolate->GetCurrentContext();
+      result->Set(context, index, misspelled_range).Check();
     }
   }
 
@@ -156,7 +164,9 @@ class Spellchecker : public Nan::ObjectWrap {
     Local<Array> result = Nan::New<Array>(dictionaries.size());
     for (size_t i = 0; i < dictionaries.size(); ++i) {
       const std::string& dict = dictionaries[i];
-      result->Set(i, Nan::New(dict.data(), dict.size()).ToLocalChecked());
+      Isolate* isolate = result->GetIsolate();
+      Local<Context> context = isolate->GetCurrentContext();
+      result->Set(context, i, Nan::New(dict.data(), dict.size()).ToLocalChecked()).Check();
     }
 
     info.GetReturnValue().Set(result);
@@ -184,7 +194,9 @@ class Spellchecker : public Nan::ObjectWrap {
       const std::string& word = corrections[i];
 
       Nan::MaybeLocal<String> val = Nan::New<String>(word.data(), word.size());
-      result->Set(i, val.ToLocalChecked());
+      Isolate* isolate = result->GetIsolate();
+      Local<Context> context = isolate->GetCurrentContext();
+      result->Set(context, i, val.ToLocalChecked()).Check();
     }
 
     info.GetReturnValue().Set(result);
